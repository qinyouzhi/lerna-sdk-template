import path from 'path';
import type { ConfigEnv, UserConfig } from 'vite';
import { {{ upperCaseName }}_PORT, VITE_BASE_PATH, VITE_DROP_CONSOLE } from '../../config';
import { createVitePlugins } from '../../config/plugins';

const resolve = (_: string) => path.resolve(__dirname, _);

const ViteConfig = ({ command, mode }: ConfigEnv): UserConfig => {
  const isBuild = command === 'build';

  console.log({ command, mode });

  return {
    base: VITE_BASE_PATH,
    root: '../../examples/{{ name }}',
    plugins: createVitePlugins(mode, isBuild),
    css: {
      preprocessorOptions: {
        less: {
          javascriptEnabled: true,
        },
      },
    },
    resolve: {
      alias: {
        '@@': resolve('./'),
        '@': resolve('./src'),
        '@components': resolve('./src/components'),
        '@services': resolve('./src/services'),
        '@utils': resolve('./src/utils'),
        '@hooks': resolve('./src/hooks'),
        '@enum': resolve('./src/enum'),
        '@store': resolve('./src/store'),
        '@constants': resolve('./src/constants'),
        '@assets': resolve('./src/assets'),
      },
    },
    server: {
      host: true,
      port: {{ upperCaseName }}_PORT,
    },
    build: {
      outDir: 'build',
      chunkSizeWarningLimit: 1024,
      terserOptions: {
        compress: {
          keep_infinity: true,
          drop_console: VITE_DROP_CONSOLE,
        },
      },
      rollupOptions: {
        input: {
          main: resolve('../../examples/{{ name }}/index.html'),
        },
      },
    },
  };
};

export default ViteConfig;
