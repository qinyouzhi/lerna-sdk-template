import axios from 'axios';
import { Message } from 'fbm-ui';

const service = axios.create({ timeout: 60000 });

const tautology = err => {
  const back = new Promise(resolve => {
    console.log('接口' + err.config.url + '请求失败，重新请求');
    resolve(true);
  });
  return back.then(() => {
    console.log(err);
    return service(err.config);
  });
};

const err = error => {
  if (error.response) {
    const data = error.response.data;
    console.log(data);
  } else {
    // 请求超时状态
    if (error.message.includes('timeout')) {
      console.log('超时了');
    } else {
      // 可以展示断网组件
      console.log('断网了');
    }
  }
  return Promise.reject(error);
};

const handleParams = async config => {
  const avocadoConfig = window['Avocado{{ properCase noPrefixName }}Config'];
  const ts = new Date().getTime();
  config.baseURL = avocadoConfig?.server_url;
  config.headers['authorization'] = avocadoConfig?.authorization;
  config.params ? (config.params = { ...config.params, ts }) : (config.params = { ts });

  return config;
};

service.interceptors.request.use(config => {
  return handleParams(config);
}, err);

service.interceptors.response.use(response => {
  const {
    status,
    data: { code, message },
  } = response;

  if (status === 200 && code === 0) {
    return response.data;
  } else if (status === 200 && code === -30003) {
    return tautology(response);
  } else {
    Message.error(message);
  }

  return Promise.reject(response.data);
}, err);

export default service;
